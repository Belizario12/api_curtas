import time
from datetime import timedelta
import streamlit as st
from streamlit_cookies_controller import CookieController
from dotenv import load_dotenv
from redis_config import get_redis_connection
from cronometro import exibir_cronometro
from utils import tempo_restante

def run():
    # ----------------- Configura√ß√µes iniciais -----------------
    load_dotenv()
    st.set_page_config(page_title="Vota√ß√£o Festival", layout="wide")

    r = get_redis_connection()
    if r is None:
        st.error("‚ùå N√£o foi poss√≠vel conectar ao Redis. Verifique a configura√ß√£o.")
        st.stop()

    controller = CookieController()
    candidatos = [
        "Rastreio na Produ√ß√£o de Imagens e V√≠deos Gerados por IA e Suas Implica√ß√µes Legais",
        "O Despertar da Consci√™ncia: Intelig√™ncia Artificial sob a Perspectiva de Frankenstein",
        "ECO: O Sil√™ncio da Mente",
        "O Futuro F√°cil",
        "IA e √âtica: At√© Onde a Tecnologia Pode Substituir a Humanidade?",
        "Confiss√µes para a M√°quina",
        "O Impacto dos Criadores de Conte√∫do na Subjetividade dos Usu√°rios",
        "IA: Quem √© o Dono da Arte?",
        "Seguran√ßa Digital: Golpes Mais Comuns de IA na Internet",
        "Quem √© o Dono? Um Curta sobre Arte, IA e Propriedade Intelectual",
        "O Rob√¥ Preconceituoso",
        "IARA",
        "Rob√¥s Artistas: Quem Leva o Cr√©dito? A Guerra da Desinforma√ß√£o",
    ]

    # ----------------- L√≥gica de vota√ß√£o -----------------
    restante = tempo_restante(r)
    ip_usuario = controller.get("ajs_anonymous_id")

    if ip_usuario and r.sismember("votantes", ip_usuario):
        votos_realizados = True
    else:
        st.session_state.ip_usuario = ip_usuario
        votos_realizados = False

    # ----------------- P√°gina de Vota√ß√£o -----------------
    st.title("üó≥Ô∏è Vote no seu curta favorito!")

    if restante > timedelta(seconds=0) and not votos_realizados:
        st.info("Escolha um curta abaixo e confirme seu voto.")

        # Layout em duas colunas
        cols = st.columns(2)

        for idx, candidato in enumerate(candidatos):
            with cols[idx % 2]:
                # Card do candidato usando container
                with st.container(border=True):
                    st.subheader(f"üé¨ {candidato}")
                    if st.button("Votar", key=candidato, use_container_width=True, type="primary"):
                        if ip_usuario is None:
                            ip_usuario = controller.get("ajs_anonymous_id")

                        r.sadd("votantes", ip_usuario)
                        r.hincrby("votos", candidato, 1)
                        st.success(f"‚úÖ Voc√™ votou em **{candidato}**!")
                        st.balloons()

        exibir_cronometro(r)

    elif restante > timedelta(seconds=0) and votos_realizados:
        st.warning("‚ö†Ô∏è Voc√™ j√° votou. Aguarde o fim do per√≠odo de vota√ß√£o.")
        exibir_cronometro(r)

    elif restante <= timedelta(seconds=0) and not votos_realizados:
        st.warning("‚è≥ O per√≠odo de vota√ß√£o ainda n√£o come√ßou!")

    elif restante <= timedelta(seconds=0) and votos_realizados:
        st.warning("‚úÖ Obrigado pelo seu voto!")
